Ѕилетики
(¬рем€: 0,5 сек. ѕам€ть: 16 ћб —ложность: 37%)

¬ процессе установки турникетов в автобусах, разработчики столкнулись с проблемой проверки подлинности билета. ƒл€ ее решени€ был придуман следующий способ защиты от подделок.

»нформаци€, записанна€ на билете, кодируетс€ K числами (0 или 1). ѕри этом непосредственно на билете записываетс€ последовательность из N чисел (N >= K) так, что числа, записанные на рассто€нии K, совпадают. “аким образом, дл€ проверки подлинности билета достаточно проверить, что все числа на рассто€нии K совпадают.   сожалению, при считывании информации с билета иногда могут происходить ошибки Ч считаетс€, что одно из чисел может исказитьс€ (то есть 0 заменитьс€ на 1, или 1 Ч на 0). “акой билет все равно нужно считать подлинным. ¬о всех остальных случа€х билет считаетс€ поддельным.

Ќапишите программу, котора€ по информации, считанной с билета, устанавливает его подлинность, и указывает на то, при считывании какого из чисел могла произойти ошибка.
¬ходные данные

¬ первой строке входного файла INPUT.TXT записаны числа N и K (1 <= N <= 50000, 1 <= K <= 1000, K <= N). ¬о второй строке записано N чисел, каждое из которых €вл€етс€ 0 или 1 Ч информаци€, считанна€ с билета.
¬ыходные данные

¬ первой строке выходного файла OUTPUT.TXT должно быть записано OK, если билет подлинный и FAIL, если поддельный. ¬ случае, если билет подлинный, во второй строке выведите 0, если все числа были считаны правильно, или номер числа, в котором при считывании произошла ошибка. ≈сли возможных искаженных номеров несколько, выведите наименьший из них.
ѕримеры
є	INPUT.TXT		OUTPUT.TXT
1	6 2			OK
	1 0 1 0 1 0		0
2	8 5             	OK
	0 1 1 0 1 0 0 1		2
3	6 2
	1 1 1 0 0 0 		FAIL